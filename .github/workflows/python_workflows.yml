name: python

on:
  repository_dispatch:
    types: [custom-event] 
  workflow_call:
    inputs:
      config-path:
        required: true
        type: string
    secrets:
      token:
        required: true

jobs:
  dependencies:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Determine environment file
        id: determine-env-file
        run: echo "::set-output name=env-file::$(if [[ -f requirement.txt ]]; then echo requirement.txt; else echo environment.yml; fi)"

      - name: Set up micromamba
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: ${{ steps.determine-env-file.outputs.env-file }}
          cache-environment: true

      - name: create a script
        run: touch activate_env.sh

      - name: create a script with path for cache
        run: touch path_env.sh

      - name: Convert paths to JSON
        id: convert
        env:
          paths: |
            ~/micromamba-bin/
            ~/micromamba/
            ~/work/_temp/setup-micromamba/
      
        run: |
          echo "${{ env.paths }}" >> path_env.sh

      - name: Calculate SHA-256 hash and put it in the script
        id: calculate-sha256
        run: |
          hash=$(shasum -a 256 "${{ steps.determine-env-file.outputs.env-file }}" | awk '{ print $1 }')
          echo "sha256=${{ runner.os }}-micromamba-$hash" >> $GITHUB_OUTPUT

          # put the key in a file
          echo "sha256=${{ runner.os }}-micromamba-$hash" > activate_env.sh

          cat << 'EOF' >> activate_env.sh
          

          MICROMAMBA_DIR="$HOME/micromamba-bin"
          MICROMAMBA_BIN="$MICROMAMBA_DIR/micromamba"
          MICROMAMBA_ROOT="$HOME/micromamba"
          ENV_NAME="myenv"
          BASHRC="$HOME/.bashrc"
          
          # Vérifier si micromamba existe et est exécutable
          if [ ! -x "$MICROMAMBA_BIN" ]; then
            echo "micromamba binary not found or not executable"
            exit 1
          fi
          
          # Définir le préfixe racine
          export MAMBA_ROOT_PREFIX="$MICROMAMBA_ROOT"
          
          # Initialiser micromamba pour le shell actuel
          eval "$("$MICROMAMBA_BIN" shell hook -s bash)"
          
          # Vérifier que le répertoire myenv existe
          if [ ! -d "$MICROMAMBA_ROOT/envs/$ENV_NAME" ]; then
            echo "Environment $ENV_NAME not found"
            exit 1
          fi
          
          # Activer l'environnement myenv
          micromamba activate "$ENV_NAME"

          quarto publish gh-pages template-computo-python.qmd

      - name: Cache environment
        uses: actions/cache@v4
        with:
          path: |
            ~/micromamba-bin/
            ~/micromamba/
            ~/work/_temp/setup-micromamba/
          key: ${{ steps.calculate-sha256.outputs.sha256 }}

      - name: Deploy an artifact
        uses: actions/upload-artifact@v3
        with: 
          name: artifact-cache
          path: path_env.sh
        

      - name: Deploy an artifact
        uses: actions/upload-artifact@v3
        with: 
          name: artifact-env
          path: activate_env.sh




















